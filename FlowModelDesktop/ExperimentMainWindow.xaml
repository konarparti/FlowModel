<Window x:Class="FlowModelDesktop.ExperimentMainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FlowModelDesktop"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:wpf="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
        xmlns:viewModel="clr-namespace:FlowModelDesktop.ViewModel"
        xmlns:models="clr-namespace:FlowModelDesktop.Models"
        mc:Ignorable="d"
        Title="ExperimentMainWindow" Height="810" Width="1200" MinHeight="810" MinWidth="1200" FontWeight="DemiBold" FontSize="14">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="400"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <StackPanel Grid.Column="0">
            <GroupBox Header="План эксперимента" Padding="0 5">
                <StackPanel>
                    <GroupBox Header="Геометрические параметры канала" Padding="0 5">
                        <StackPanel>
                            <TextBlock Margin="3">Длина, м</TextBlock>
                            <xctk:DecimalUpDown Name="L" Margin="3" Value="{Binding InputData.L}" ValueChanged="ValueChanged" />

                            <TextBlock  Margin="3">Ширина, м</TextBlock>
                            <xctk:DecimalUpDown Name="W" Margin="3" Value="{Binding InputData.W}" ValueChanged="ValueChanged"></xctk:DecimalUpDown>

                            <TextBlock Margin="3">Глубина, м</TextBlock>
                            <xctk:DecimalUpDown Name="H" Margin="3" Value="{Binding InputData.H}" ValueChanged="ValueChanged"></xctk:DecimalUpDown>
                        </StackPanel>
                    </GroupBox>

                    <TextBlock Margin="10 5">Выбор материала:</TextBlock>
                    <ComboBox Margin="10 2" SelectedItem="{Binding SelectedMaterial, Mode=TwoWay}" ItemsSource="{Binding AllMaterials}" DisplayMemberPath="Type" ></ComboBox>

                    <GroupBox Header="Параметры метода решения" Padding="0 10">
                        <StackPanel>
                            <TextBlock Margin="3">Шаг расчета по длине канала, м</TextBlock>
                            <xctk:DecimalUpDown Name="DeltaZ" Value="{Binding InputData.DeltaZ}" ValueChanged="ValueChanged"></xctk:DecimalUpDown>
                        </StackPanel>
                    </GroupBox>
                </StackPanel>
            </GroupBox>

            <GroupBox Header="Варьируемый параметр" Padding="0 5" Margin="5 0 5 0">
                <StackPanel>
                    <RadioButton Name="Temperature" Margin="0 5" Checked="ToggleButton_OnChecked" IsChecked="{Binding IsTemperatureChecked}">Температура крышки, °C</RadioButton>
                    <RadioButton Name="Velocity" Margin="0 5" Checked="ToggleButton_OnChecked" IsChecked="{Binding IsVelocityChecked}">Скорость крышки, м/с</RadioButton>
                    <Label Name="ModeLabel">Название неварьируемого параметра:</Label>
                    <xctk:DecimalUpDown Name="Mode" Margin="3" Value="{Binding ModeValue}"></xctk:DecimalUpDown>
                    <Label>Диапазон варьирования:</Label>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.35*"/>
                            <ColumnDefinition Width="0.1*"/>
                            <ColumnDefinition Width="0.35*"/>
                        </Grid.ColumnDefinitions>
                        <xctk:DecimalUpDown Name="Min" Grid.Column="0" Margin="3" Value="{Binding MinRangeValue}"></xctk:DecimalUpDown>
                        <Label Name="Range" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center">≤ X ≤</Label>
                        <xctk:DecimalUpDown Name="Max" Grid.Column="2" Margin="3" Value="{Binding MaxRangeValue}"></xctk:DecimalUpDown>
                    </Grid>
                    <Label>Шаг варьирования:</Label>
                    <xctk:DecimalUpDown Name="StepRange" ValueChanged="ValueChanged" Value="{Binding Step}"></xctk:DecimalUpDown>

                </StackPanel>
            </GroupBox>

            <GroupBox Header="Критериальное значение" Padding="0 5" Margin="5 0 5 0">
                <StackPanel>
                    <RadioButton Margin="0 5" IsChecked="{Binding IsTemperatureCriteriaChecked}">Температура продукта, °C</RadioButton>
                    <RadioButton Margin="0 5" IsChecked="{Binding IsViscosityCriteriaChecked}">Вязкость продукта, Па*с</RadioButton>
                </StackPanel>
            </GroupBox>

            <Button Margin=" 100 8" Command="{Binding CalculateCommand}" >Рассчитать</Button>
        </StackPanel>

        <TabControl Grid.Column="1">
            <TabItem Header="Таблица значений">
                <DataGrid Name="DatGrid" ItemsSource="{Binding ExperimentalData}" ColumnWidth="*" IsReadOnly="True" AutoGenerateColumns="False" >
                    <DataGrid.Resources>
                        <models:BindingProxy x:Key="proxy" Data="{Binding }" />
                    </DataGrid.Resources>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="{Binding Data.AxisXTitle, Source={StaticResource proxy}}" Binding="{Binding Param}"/>
                        <DataGridTextColumn Header="{Binding Data.AxisYTitle, Source={StaticResource proxy}}" Binding="{Binding CriteriaValue}"/>
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
            <TabItem Name="Charts" Header="График">
                <wpf:CartesianChart >
                    <wpf:CartesianChart.Series>
                        <wpf:LineSeries Title="{Binding LineSeriesTitle}" Values="{Binding CriteriaValues}" Stroke="Crimson" Fill="Transparent">
                        </wpf:LineSeries>
                    </wpf:CartesianChart.Series>
                    <wpf:CartesianChart.AxisX>
                        <wpf:Axis Title="{Binding AxisXTitle}" FontSize="16" FontWeight="Bold" Foreground="Black" Labels="{Binding ChartParams}"></wpf:Axis>
                    </wpf:CartesianChart.AxisX>
                    <wpf:CartesianChart.AxisY>
                        <wpf:Axis Title="{Binding AxisYTitle}" FontSize="16" FontWeight="Bold" Foreground="Black" LabelFormatter="{Binding YFormatter}"></wpf:Axis>
                    </wpf:CartesianChart.AxisY>
                </wpf:CartesianChart>
            </TabItem>
            <TabItem Header="Анализ">

            </TabItem>
        </TabControl>
    </Grid>
</Window>
